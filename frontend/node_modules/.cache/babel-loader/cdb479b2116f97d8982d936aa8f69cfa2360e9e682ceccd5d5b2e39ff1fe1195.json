{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qianx\\\\Desktop\\\\Coding\\\\JPP\\\\frontend\\\\src\\\\pages\\\\Category.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Box, Grid, Autocomplete, TextField } from '@mui/material';\nimport { Dropdown } from '@mui/base';\nimport '../styles/Category.css';\nimport SegmentDisplay from '../components/SegmentDisplay';\nimport { db } from '../config/firebase';\nimport { getDocs, deleteDoc, collection, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category({\n  categories,\n  category\n}) {\n  _s();\n  const [segments, setSegments] = useState([]);\n  const notesCollectionRef = collection(db, \"notes\");\n  const getMovieList = async () => {\n    try {\n      const data = await getDocs(notesCollectionRef);\n      const filteredData = data.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setSegments(filteredData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const [selected, setSelected] = useState([]);\n\n  // useEffect here to pull from db and place into segments\n  useEffect(() => {\n    getMovieList();\n  }, [segments]);\n  const deleteSegment = async id => {\n    const notesDoc = doc(db, \"notes\", id);\n    await deleteDoc(notesDoc);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      class: \"font-\",\n      children: \"Category chosen:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      defaultOpen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"state is \", selected]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderRadius: '10px',\n        // Set the border radius\n        boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n        // Add a shadow\n        padding: '20px',\n        // Add some padding for content\n        width: 500,\n        maxHeight: 600,\n        backgroundColor: \"lightblue\",\n        overflow: \"auto\",\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        options: ['anger', 'sadness'],\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          variant: \"standard\",\n          label: \"Filter by sentiment below:\",\n          placeholder: \"all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this),\n        onChange: (event, newVal) => setSelected(newVal)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), segments.filter(segment => {\n        if (selected.length === 0) return true;\n        for (let i = 0; i < selected.length; i++) {\n          if (selected[i] === segment.sentiment) return true;\n        }\n        return false;\n      }).map(filteredSegment => /*#__PURE__*/_jsxDEV(SegmentDisplay, {\n        segment: filteredSegment,\n        segmentID: filteredSegment.id,\n        removeSeg: deleteSegment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Category, \"Oa3k3gBvIouwU4EHNpFAJZhnl0k=\");\n_c = Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","Grid","Autocomplete","TextField","Dropdown","SegmentDisplay","db","getDocs","deleteDoc","collection","doc","jsxDEV","_jsxDEV","Category","categories","category","_s","segments","setSegments","notesCollectionRef","getMovieList","data","filteredData","docs","map","id","err","console","error","selected","setSelected","deleteSegment","notesDoc","children","variant","class","fileName","_jsxFileName","lineNumber","columnNumber","defaultOpen","sx","borderRadius","boxShadow","padding","width","maxHeight","backgroundColor","overflow","justifyContent","alignItems","multiple","options","renderInput","params","label","placeholder","onChange","event","newVal","filter","segment","length","i","sentiment","filteredSegment","segmentID","removeSeg","_c","$RefreshReg$"],"sources":["C:/Users/qianx/Desktop/Coding/JPP/frontend/src/pages/Category.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Box, Grid, Autocomplete, TextField } from '@mui/material';\r\nimport { Dropdown } from '@mui/base';\r\nimport '../styles/Category.css';\r\nimport SegmentDisplay from '../components/SegmentDisplay';\r\nimport { db } from '../config/firebase';\r\nimport { getDocs, deleteDoc, collection, doc } from \"firebase/firestore\"\r\n\r\nexport default function Category({ categories, category }) {\r\n  const [ segments, setSegments ] = useState([]);\r\n  \r\n  const notesCollectionRef = collection(db, \"notes\");\r\n\r\n  const getMovieList = async () => {\r\n    try {\r\n      const data = await getDocs(notesCollectionRef);\r\n      const filteredData = data.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      setSegments(filteredData);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  const [ selected, setSelected ] = useState([]);\r\n\r\n  // useEffect here to pull from db and place into segments\r\n  useEffect(() => {\r\n    getMovieList();\r\n  }, [segments])\r\n\r\n  const deleteSegment = async (id) => {\r\n    const notesDoc = doc(db, \"notes\", id);\r\n    await deleteDoc(notesDoc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" class=\"font-\">Category chosen:</Typography>\r\n      <Typography variant=\"h5\">{category}</Typography>\r\n      <Dropdown defaultOpen></Dropdown>\r\n      <Typography>state is {selected}</Typography>\r\n      <Box sx={{\r\n        borderRadius: '10px', // Set the border radius\r\n        boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)', // Add a shadow\r\n        padding: '20px', // Add some padding for content\r\n        width: 500,\r\n        maxHeight: 600,\r\n        backgroundColor: \"lightblue\",\r\n        overflow: \"auto\",\r\n        justifyContent: 'center',\r\n        alignItems: 'center'  \r\n      }}>\r\n        <Autocomplete\r\n          multiple\r\n          options={['anger', 'sadness']}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"standard\"\r\n              label=\"Filter by sentiment below:\"\r\n              placeholder=\"all\"\r\n            />\r\n          )}\r\n          onChange={(event, newVal) => setSelected(newVal)}\r\n        />\r\n        { segments.filter((segment) => {\r\n          if (selected.length === 0)\r\n            return true;\r\n            \r\n          for (let i = 0; i < selected.length; i++) {\r\n            if (selected[i] === segment.sentiment)\r\n              return true;\r\n          }\r\n\r\n          return false;\r\n        }).map((filteredSegment) => <SegmentDisplay segment={filteredSegment} segmentID={filteredSegment.id} removeSeg={deleteSegment}/>) }\r\n      </Box>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}