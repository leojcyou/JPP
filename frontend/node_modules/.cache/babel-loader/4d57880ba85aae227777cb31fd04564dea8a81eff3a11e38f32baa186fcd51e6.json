{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qianx\\\\Desktop\\\\Coding\\\\JPP\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Typography, Button } from '@mui/material';\nimport { db } from '../config/firebase';\nimport { collection, addDoc } from \"firebase/firestore\";\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [note, setNote] = useState(\"\");\n  const notesCollectionRef = collection(db, \"notes\");\n\n  // we need sentiment before we write to firestore db so these are fake values for now\n  const username = \"Bob\"; //TODO CHANGE THIS LATER\n  const timestamp = 123456789;\n  const sentiment = \"sad\";\n  const handleSubmit = async () => {\n    try {\n      await addDoc(notesCollectionRef, {\n        userName: username,\n        text: note,\n        timestamp: timestamp,\n        sentiment: sentiment\n      });\n      setNote(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      class: \"welcome-message\",\n      children: [\"Welcome, \", \"INSERT_USERS_NAME\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"standard\",\n      multiline: true,\n      style: {\n        width: '70%',\n        backgroundColor: '#f4f1ec',\n        marginTop: '2%',\n        marginBottom: '2%',\n        borderRadius: '5px'\n        // '& .MuiOutlinedInput-root': {\n        //   borderRadius: '20px !important', // Adjust the border radius for the outline\n        // }\n      },\n\n      inputProps: {\n        style: {\n          fontSize: '20px',\n          border: 'none'\n        },\n        classes: {\n          notchedOutline: 'no-border'\n        }\n        // disableUnderline: true\n      },\n\n      rows: 12,\n      placeholder: \"Unpack your thoughts here...\",\n      value: note,\n      onChange: e => setNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button\n    // class=\"enter-button\"\n    , {\n      variant: \"contained\",\n      size: \"large\",\n      color: \"success\",\n      onClick: handleSubmit,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"l4b83JBpKzh+zvY0jif08W5Oai4=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","TextField","Typography","Button","db","collection","addDoc","jsxDEV","_jsxDEV","Home","_s","note","setNote","notesCollectionRef","username","timestamp","sentiment","handleSubmit","userName","text","err","console","error","class","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","multiline","style","width","backgroundColor","marginTop","marginBottom","borderRadius","inputProps","fontSize","border","classes","notchedOutline","rows","placeholder","value","onChange","e","target","size","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/qianx/Desktop/Coding/JPP/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TextField, Typography, Button } from '@mui/material';\r\nimport { db } from '../config/firebase';\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\nimport '../styles/Home.css';\r\n\r\nexport default function Home() {\r\n  const [note, setNote] = useState(\"\");\r\n  \r\n  const notesCollectionRef = collection(db, \"notes\");\r\n \r\n  // we need sentiment before we write to firestore db so these are fake values for now\r\n  const username = \"Bob\" //TODO CHANGE THIS LATER\r\n  const timestamp = 123456789\r\n  const sentiment = \"sad\"\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await addDoc(notesCollectionRef, {\r\n        userName: username,\r\n        text: note,\r\n        timestamp: timestamp,\r\n        sentiment: sentiment,\r\n      });\r\n      setNote(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\">\r\n        <Typography \r\n          variant=\"h1\"\r\n          class=\"welcome-message\">\r\n            Welcome, {\"INSERT_USERS_NAME\"}\r\n        </Typography>\r\n        <TextField \r\n            variant=\"standard\"\r\n            multiline\r\n            style={{ \r\n              width: '70%',\r\n              backgroundColor: '#f4f1ec',\r\n              marginTop: '2%',\r\n              marginBottom: '2%',\r\n              borderRadius: '5px'\r\n              // '& .MuiOutlinedInput-root': {\r\n              //   borderRadius: '20px !important', // Adjust the border radius for the outline\r\n              // }\r\n            }}\r\n            inputProps={{ \r\n              style: { \r\n                fontSize: '20px',\r\n                border: 'none'\r\n              },\r\n              classes: { notchedOutline: 'no-border' },\r\n              // disableUnderline: true\r\n            }}\r\n            rows={12}\r\n            placeholder={\"Unpack your thoughts here...\"}\r\n            value={note}\r\n            onChange={(e) => setNote(e.target.value)}\r\n        />\r\n        <Button \r\n            // class=\"enter-button\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"success\"\r\n            onClick={handleSubmit}\r\n        >Enter</Button>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAEvD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMa,kBAAkB,GAAGR,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;;EAElD;EACA,MAAMU,QAAQ,GAAG,KAAK,EAAC;EACvB,MAAMC,SAAS,GAAG,SAAS;EAC3B,MAAMC,SAAS,GAAG,KAAK;EAEvB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMX,MAAM,CAACO,kBAAkB,EAAE;QAC/BK,QAAQ,EAAEJ,QAAQ;QAClBK,IAAI,EAAER,IAAI;QACVI,SAAS,EAAEA,SAAS;QACpBC,SAAS,EAAEA;MACb,CAAC,CAAC;MACFJ,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,KAAK,EAAC,WAAW;IAAAC,QAAA,gBAClBhB,OAAA,CAACN,UAAU;MACTuB,OAAO,EAAC,IAAI;MACZF,KAAK,EAAC,iBAAiB;MAAAC,QAAA,GAAC,WACb,EAAC,mBAAmB;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACbrB,OAAA,CAACP,SAAS;MACNwB,OAAO,EAAC,UAAU;MAClBK,SAAS;MACTC,KAAK,EAAE;QACLC,KAAK,EAAE,KAAK;QACZC,eAAe,EAAE,SAAS;QAC1BC,SAAS,EAAE,IAAI;QACfC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE;QACd;QACA;QACA;MACF,CAAE;;MACFC,UAAU,EAAE;QACVN,KAAK,EAAE;UACLO,QAAQ,EAAE,MAAM;UAChBC,MAAM,EAAE;QACV,CAAC;QACDC,OAAO,EAAE;UAAEC,cAAc,EAAE;QAAY;QACvC;MACF,CAAE;;MACFC,IAAI,EAAE,EAAG;MACTC,WAAW,EAAE,8BAA+B;MAC5CC,KAAK,EAAEjC,IAAK;MACZkC,QAAQ,EAAGC,CAAC,IAAKlC,OAAO,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrB,OAAA,CAACL;IACG;IAAA;MACAsB,OAAO,EAAC,WAAW;MACnBuB,IAAI,EAAC,OAAO;MACZC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEjC,YAAa;MAAAO,QAAA,EACzB;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACnB,EAAA,CAlEuBD,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}